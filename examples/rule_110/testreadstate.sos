+>!!+!-!+!!!-!<-

+>            Create a new stack to hold the input and enter it
(             read loop
  +>            Create an emtpy stack and enter it.
  ???????       Read the first 7 bits of the byte.
  (-)           Discard everything read so far.
  ?             Read the lowest bit.
  <             Leave the stack of the new bit, returning to the parent stack.

)             end read loop
<-            Delete extra bit.

<             Leave the input stack and return to root.

+>!!+!-!+!!!-!<-

(
  %             Exchange. If there's only one element on the root
                stack, this terminates the loop.
  +>!!+!-!+!-!+!-!<-

  (-)           Delete everything. This ensures the next test will
                terminate the program.
-)
+>!!+!-!+!!!-!<-

=             Duplicate. If the root stack is empty, this terminates
              the program.
+>!!+!-!+!!!-!<-

=>            Duplicate state stack and enter duplicate
(             Write loop
  {             Bring up the next bit to write.
  >             Enter bit to output. Terminates loop if none left.
  +>            Create and enter auxiliary empty stack
  !!+!!-!!!     Output 0011000.
  <-            Leave and destroy auxiliary stack.
  !             Output the current bit.
  <-            Leave and delete the bit.

)
!!!!+!-!+!-!  Line feed

<-            Leave and remove the duplicate stack.


